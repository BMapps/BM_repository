Dim Wb As Workbook, Inputlist As Worksheet, stpdb As Worksheet, stplist As Worksheet, pnlist As Worksheet
Dim pn As Variant, Bom As Variant, BomFile As Variant, BomSheet As Variant, Dir As Variant, BomSheet2 As Variant, BomFile2 As Variant

 Dim name As Variant, Fname As Variant, Fname1 As Variant, j As Integer, i As Integer

Sub Generate()
Application.ScreenUpdating = False
Application.Calculation = xlManual

Set Wb = ThisWorkbook

Set Inputlist = Worksheets("Input")
Set stpdb = Worksheets("Setups DB")
Set stplist = Worksheets("Setups list")
Set pnlist = Worksheets("PNstoDelete")
For i = 1 To 100
    If Inputlist.Cells(1, i).text = "gen needed" Then
    need = i
    End If
Next i

If stpdb.Cells(1, 1).text <> "1" Then
    stpdb.Cells(1, 1) = 1
End If
If stplist.Cells(1, 1).text <> "1" Then
    stplist.Cells(1, 1) = 1
    stplist.Cells(1, 2) = "stp required"
    stplist.Cells(1, 3) = "npf required"
    stplist.Cells(1, 4) = "bins separation required"
End If

stpdb.Range(stpdb.Rows(2), stpdb.Rows(stpdb.UsedRange.Rows.Count + 3)).Delete
stplist.Range(stplist.Rows(2), stplist.Rows(stplist.UsedRange.Rows.Count + 3)).Delete
   
Dir = Inputlist.Cells(1, 1).text
 For i = 5 To 600

    
    If Inputlist.Cells(i, 1).text <> "" And Inputlist.Cells(i, need).text = "x" And Inputlist.Cells(i, need).text <> "" Then
       
   
    pn = Inputlist.Cells(i, 1).text
    Bom = Dir + pn + ".CSV"
   
     On Error Resume Next
        Set BomFile = Nothing
        Application.DisplayAlerts = False
        Set BomFile = Workbooks.Open(Dir + "Formatted\" + pn + "_1.xlsm")
        If BomFile Is Nothing Then
        On Error GoTo 0
            Set BomFile = Workbooks.Open(Bom)
            Set BomSheet = BomFile.Worksheets(pn)
            Set BomFile2 = Workbooks.Add
            Set BomSheet2 = BomFile2.Worksheets(1)
            prepare
            BomFile2.SaveAs Filename:=Dir + "Formatted\" + pn + "_1.xlsm", FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
            BomFile.Close False
            BomFile2.Close False
            Set BomFile = Workbooks.Open(Dir + "Formatted\" + pn + "_1.xlsm")
        End If
    On Error GoTo 0
        
    
    Set BomSheet = BomFile.Worksheets(1)

   
    
    For j = 2 To Inputlist.UsedRange.Columns.Count
       If Inputlist.Cells(1, j) = "x" Or Inputlist.Cells(1, j) = "xx" Then
       
          
            If Inputlist.Cells(3, j).text = "Main" Then
               ProcessMain i, j, pn, Inputlist
               changebs
            Else
                ProcessHalb (1)
                changebs
            End If
   End If
        
        Next j
        
        
        BomFile.Close False
    
    
    End If
    Next i
    delodu
    delpns
    hidekits
    uploadPos
    checkpos

End Sub
Sub checkpos()
flag = 0
    For i = 1 To stpdb.UsedRange.Rows.Count
        If stpdb.Cells(i, 5) <> "" Then
            If stpdb.Cells(i, 6) = "" Then
                stpdb.Cells(i, 6).Interior.Color = vbRed
                flag = 1
            End If
        End If
    Next i
    
    If flag = 0 Then
    MsgBox ("There are no new pns")
    Else
    updatelist
    MsgBox (" There are new unique PNs. Please check")
    End If
    
End Sub

Sub prepare()
    BomSheet.Activate
    Columns("A:A").Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=True, Space:=False, Other:=True, OtherChar:= _
        ";", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), _
        Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1)), TrailingMinusNumbers _
        :=True
        BomSheet2.Cells(1, 1) = 1
        
    For ii = 2 To BomSheet.UsedRange.Rows.Count
        If Len(BomSheet.Cells(ii, 7).text) < 1 Or BomSheet.Cells(ii, 7).text = "MECH" Then
        BomSheet.Range(BomSheet.Cells(ii, 1), BomSheet.Cells(ii, 5)).copy
       
           BomSheet2.Rows(BomSheet2.UsedRange.Rows.Count + 1).PasteSpecial
            x = BomSheet2.UsedRange.Rows.Count
           If Len(BomSheet2.Cells(x, 5)) > 3 Then
           BomSheet2.Cells(x, 5) = Left(BomSheet2.Cells(x, 5), Len(BomSheet2.Cells(x, 5)) - 4)
            End If
           jj = 1
           Do While jj < BomSheet2.Cells(x, 5)
          
        
               BomSheet2.Cells(x, 3) = BomSheet2.Cells(x, 3).text & " " & BomSheet.Cells(ii + jj, 3).text
               jj = jj + 1
           Loop
           ii = ii + jj - 1
            End If
       
    Next ii
   
   
End Sub
Sub delpns()
    For i = 1 To stpdb.UsedRange.Rows.Count
        For j = 2 To pnlist.UsedRange.Rows.Count
            If stpdb.Cells(i, 2).text <> "" Then
                If pnlist.Cells(j, 1).text <> "" Then
                    If stpdb.Cells(i, 2).Value = pnlist.Cells(j, 1).Value Then
                    
                    stpdb.Rows(i).Delete
                    i = i - 1
                    End If
                End If
            End If
            Next j
        Next i
End Sub

Sub hidekits()

    For ii = stplist.UsedRange.Rows.Count To 2 Step -1   ' find halb pn to hide from bottom to top
        y = gety(stplist.Cells(ii, 1).Value)
        If (Inputlist.Cells(1, y).text = "xx") Then
            Wb.Worksheets.Add().name = "temp"
            For jj = 1 To stpdb.UsedRange.Rows.Count()
                If stpdb.Cells(jj, 1) = stplist.Cells(ii, 1).Value Then         'cut halb to temp ws
                    stpdb.Rows(jj).Cut
                    Worksheets("temp").Rows(1).Insert shift = xlDown
                    stpdb.Cells(jj, 1).Interior.Color = vbYellow
                End If
            Next jj
            jj = 1
            flag = True
            Do While flag = True
                If stpdb.Cells(jj, 1).text = "" And stpdb.Cells(jj, 1).Interior.Color <> vbYellow Then
                    flag = False
                End If
                If stpdb.Cells(jj, 2) = stplist.Cells(ii, 1).Value Then     'delete halb from parent
                    temp = stpdb.Cells(jj, 1).Value
                    hc = stpdb.Cells(jj, 5).Value
                 
                 
                    stpdb.Rows(jj).Delete
                
                
                    For k = 1 To Worksheets("temp").UsedRange.Rows.Count        'insert halb bom to parent
                        Worksheets("temp").Rows(k).copy
                        stpdb.Rows(jj).Insert shift = xlDown
                        stpdb.Cells(jj, 1) = temp
                        stpdb.Cells(jj, 5) = stpdb.Cells(jj, 5) * hc
                        If hc > 1 Then
                            stpdb.Cells(jj, 3) = updcrd(stpdb.Cells(jj, 3), hc)
                        End If
                    Next k
        
                End If
            jj = jj + 1
            Loop
            Application.DisplayAlerts = False
    
            Worksheets("temp").Delete
           
            stplist.Cells(ii, 1) = ""
            stplist.Cells(ii, 1).Interior.Color = vbYellow
        End If
    Next ii
    deleteyellow
End Sub
Sub delodu()

    For ii = 1 To stpdb.UsedRange.Rows.Count
        If Left(stpdb.Cells(ii, 1).Value, 2) = 22 And Left(stpdb.Cells(ii, 2).Value, 2) = 13 Then
            stpdb.Rows(ii).Delete
        End If
         If Left(stpdb.Cells(ii, 1).Value, 2) = "01" And Left(stpdb.Cells(ii, 2).Value, 2) = 11 Then
            stpdb.Rows(ii).Delete
        End If
    Next ii
           
End Sub
Function updcrd(crd As String, hc As Variant)

    Count = 0
    newcrd = ""
    For iii = 1 To Len(crd)
        If Left(Right(crd, Len(crd) + 1 - iii), 1) = "," Then
            Count = Count + 1
        End If
    Next iii
    If Count < 1 Then
        For iii = 1 To hc
            newcrd = newcrd & crd & iii
            If iii < hc Then
            newcrd = newcrd & ","
            End If
        Next iii
    Else
        newcrd = adddig(crd, hc, Count)
    End If
    updcrd = newcrd
End Function
Function adddig(crd As String, hc As Variant, c As Variant)
    Length = Len(crd)
    Dim crdd() As String
    ReDim crdd(1 To Length)
    newcrd = ""
    For iii = 1 To Len(crd)
        crdd(iii) = Left(Right(crd, Len(crd) + 1 - iii), 1)
    Next iii
    For jjj = 1 To hc
        For iii = 1 To Len(crd)
            If crdd(iii) = "," Then
                newcrd = newcrd & jjj
            End If
            newcrd = newcrd & crdd(iii)
        Next iii
        newcrd = newcrd & jjj & ","
    Next jjj
    adddig = newcrd
    
End Function
Sub deleteyellow()
    For i = 2 To stpdb.UsedRange.Rows.Count
        If stpdb.Cells(i, 1).Interior.Color = vbYellow And stpdb.Cells(i - 1, 1).Interior.Color = vbYellow And stpdb.Cells(i, 1).text = "" And stpdb.Cells(i - 1, 1).text = "" Then
            stpdb.Rows(i).Delete shift:=xlUp
            i = i - 1
        End If
    Next i
    
    For i = 1 To stplist.UsedRange.Rows.Count
        If stplist.Cells(i, 1).Interior.Color = vbYellow Then
            stplist.Rows(i).Delete shift:=xlUp
            i = i - 1
        End If
    Next i

End Sub

Function gety(x As Variant)

    For ii = 1 To Inputlist.UsedRange.Rows.Count
        For jj = 1 To Inputlist.UsedRange.Columns.Count
            If Inputlist.Cells(ii, jj) = x Then
                gety = jj
                Exit For
            End If
        Next jj
    Next ii

            
End Function

Sub changebs()
     c = stpdb.UsedRange.Rows.Count - 1
     p = stpdb.Cells(c, 1).Value
     Do While stpdb.Cells(c, 1).Value = p
        If Left(stpdb.Cells(c, 2).text, 2) = "BS" Then
            For v = 2 To BomSheet.UsedRange.Rows.Count
                If BomSheet.Cells(v, 1).Value = stpdb.Cells(c, 2).Value Then
                    stpdb.Cells(c, 2).Value = BomSheet.Cells(v, 2).Value
                    stpdb.Cells(c, 4).Value = BomSheet.Cells(v, 4).Value
                End If
            Next v
        End If
        c = c - 1
    Loop
     
End Sub
Sub ProcessMain(i As Variant, j As Variant, Pnumber As Variant, Inputlist As Variant)
    
    Inputlist.Cells(i, j) = Pnumber
    
    If checkPN(Pnumber) = False Then
        Process (Pnumber)
    End If
        
    


End Sub

Sub Process(Pnumber As Variant)


    WritePNToStpList (Pnumber)
    
    WriteBomToStpDb (Pnumber)
    
    
End Sub

Sub WritePNToStpList(Pnumber As Variant)

    stplist.Cells(stplist.UsedRange.Rows.Count + 1, 1) = Pnumber

End Sub
Sub WriteBomToStpDb(Pnumber As Variant)

    BomSheet.AutoFilterMode = False
    BomSheet.Range(Cells(1, 1), Cells(1, 12)).AutoFilter
    BomSheet.Range(Cells(1, 1), Cells(1, 12)).AutoFilter Field:=1, Criteria1:=Pnumber
    BomSheet.Range(Cells(2, 1), Cells(BomSheet.UsedRange.Rows.Count, 12)).copy
    stpdb.Activate
    stpdb.Cells(stpdb.UsedRange.Rows.Count + 1, 1).Select
    stpdb.Paste
    stpdb.Cells(stpdb.UsedRange.Rows.Count + 1, 1).Interior.Color = vbYellow
    BomSheet.Activate
        
        
    BomSheet.Range(Cells(1, 1), Cells(1, 12)).AutoFilter
    
End Sub

Sub ProcessHalb(a As Integer)
   
     Dim Pnumber As Variant
     Pnumber = FindPN()
    Inputlist.Cells(i, j) = Pnumber
    If Pnumber <> -1 Then
        If checkPN(Pnumber) = False Then
           Process (Pnumber)
        End If
    End If
    
End Sub

Function checkPN(Pnumber As Variant)
flag = False
    For k = 1 To stplist.UsedRange.Rows.Count
        If stplist.Cells(k, 1).Value = Pnumber Then
        flag = True
        End If
    Next k
    checkPN = flag
End Function

Function FindPN()
flag = -1

    If Inputlist.Cells(2, j).text <> "" Then
        BomSheet.AutoFilterMode = False
        BomSheet.Range(Cells(1, 1), Cells(1, 12)).AutoFilter
        p = Application.Match(Inputlist.Cells(2, j).text, Inputlist.Rows(3), 0)
        BomSheet.Range(Cells(1, 1), Cells(1, 12)).AutoFilter Field:=1, Criteria1:=Inputlist.Cells(i, p).Value
        
        Else
        p = -1
    End If
    k = 3
    Do While Inputlist.Cells(k, j).text <> "" And flag = -1
        If Right(Inputlist.Cells(k, j).text, 1) = "*" And Left(Inputlist.Cells(k, j).text, 1) = "*" Then
            Length = Len(Inputlist.Cells(k, j).text) - 2
                    For l = 2 To BomSheet.UsedRange.Rows.Count
                        If p = -1 Then
                            If Left(BomSheet.Cells(l, 2).Value, Length) = Left(Right(Inputlist.Cells(k, j).Value, Length + 1), Length) Then
                                flag = BomSheet.Cells(l, 2).Value
                            End If
                        Else
                            If Left(BomSheet.Cells(l, 2).Value, Length) = Left(Right(Inputlist.Cells(k, j).Value, Length + 1), Length) Then
                                If BomSheet.Cells(l, 1).text = Inputlist.Cells(i, p).text Then
                                    flag = BomSheet.Cells(l, 2).Value
                                    End If
                                        
                            End If
                              
                        End If
                    Next l
        
        Else
        
    
            If Right(Inputlist.Cells(k, j).text, 1) = "*" Then
                Length = Len(Inputlist.Cells(k, j).text) - 1
                For l = 2 To BomSheet.UsedRange.Rows.Count
                    If p = -1 Then
                        If Left(BomSheet.Cells(l, 3).Value, Length) = Left(Inputlist.Cells(k, j).Value, Length) Then
                            flag = BomSheet.Cells(l, 2).Value
                        End If
                    Else
                        If Left(BomSheet.Cells(l, 3).Value, Length) = Left(Inputlist.Cells(k, j).Value, Length) Then
                            If BomSheet.Cells(l, 1).text = Inputlist.Cells(i, p).text Then
                                flag = BomSheet.Cells(l, 2).Value
                                End If
                                    
                        End If
                          
                    End If
                Next l
            Else
                If Left(Inputlist.Cells(k, j).text, 1) = "*" Then
                    Length = Len(Inputlist.Cells(k, j).text) - 1
                    For l = 2 To BomSheet.UsedRange.Rows.Count
                        If p = -1 Then
                            If BomSheet.Cells(l, 2).Value = Right(Inputlist.Cells(k, j).Value, Length) Then
                                flag = BomSheet.Cells(l, 2).Value
                            End If
                        Else
                            If BomSheet.Cells(l, 2).Value = Right(Inputlist.Cells(k, j).Value, Length) Then
                                If BomSheet.Cells(l, 1).text = Inputlist.Cells(i, p).text Then
                                    flag = BomSheet.Cells(l, 2).Value
                                    End If
                                        
                            End If
                              
                        End If
                    Next l
                
                Else
                    For l = 2 To BomSheet.UsedRange.Rows.Count
                        If p = -1 Then
                            If BomSheet.Cells(l, 3).Value = Inputlist.Cells(k, j).Value Then
                                flag = BomSheet.Cells(l, 2).Value
                            End If
                        Else
                            If BomSheet.Cells(l, 3).Value = Inputlist.Cells(k, j).Value Then
                                If BomSheet.Cells(l, 1).text = Inputlist.Cells(i, p).text Then
                                    flag = BomSheet.Cells(l, 2).Value
                                    End If
                                        
                            End If
                              
                        End If
                    Next l
                End If
            End If
        End If
        k = k + 1
        
    Loop
    FindPN = flag
End Function
